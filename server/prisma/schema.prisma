datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     String[]
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Dealership {
  address            String?
  createdAt          DateTime            @default(now())
  deliveryBays       DeliveryBay[]
  experiencePackages ExperiencePackage[]
  id                 String              @id @default(cuid())
  name               String?
  updatedAt          DateTime            @updatedAt
}

model Blocker {
  blockedBay        DeliveryBay[]
  createdAt         DateTime                     @default(now())
  blocker_dealershp EnumBlockerBlockerDealershp?
  deliveryBay       String?
  id                String                       @id @default(cuid())
  owner             String?
  status            EnumBlockerStatus?
  updatedAt         DateTime                     @updatedAt
}

model DeliveryBay {
  bayBlocker    Blocker[]
  businessHours Boolean?
  createdAt     DateTime   @default(now())
  dealership    Dealership @relation(fields: [dealershipId], references: [id])
  dealershipId  String
  id            String     @id @default(cuid())
  name          String?
  updatedAt     DateTime   @updatedAt
}

model ExperiencePackage {
  active       EnumExperiencePackageActive?
  chargeable   EnumExperiencePackageChargeable?
  createdAt    DateTime                         @default(now())
  dealership   Dealership[]
  duration     Boolean?
  id           String                           @id @default(cuid())
  imageGallery Json?
  keyImage     Json?
  name         String?
  price        Float?
  updatedAt    DateTime                         @updatedAt
}

enum EnumBlockerBlockerDealershp {
  complete_block
  partial_block
}

enum EnumBlockerStatus {
  Active
  Cancelled
}

enum EnumExperiencePackageActive {
  Active
  Inactive
}

enum EnumExperiencePackageChargeable {
  Yes
  No
}