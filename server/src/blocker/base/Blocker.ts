/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DeliveryBay } from "../../deliveryBay/base/DeliveryBay";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsEnum,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumBlockerBlockerDealershp } from "./EnumBlockerBlockerDealershp";
import { EnumBlockerStatus } from "./EnumBlockerStatus";
@ObjectType()
class Blocker {
  @ApiProperty({
    required: false,
    type: () => [DeliveryBay],
  })
  @ValidateNested()
  @Type(() => DeliveryBay)
  @IsOptional()
  blockedBay?: Array<DeliveryBay>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumBlockerBlockerDealershp,
  })
  @IsEnum(EnumBlockerBlockerDealershp)
  @IsOptional()
  @Field(() => EnumBlockerBlockerDealershp, {
    nullable: true,
  })
  blocker_dealershp?: "complete_block" | "partial_block" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  deliveryBay!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumBlockerStatus,
  })
  @IsEnum(EnumBlockerStatus)
  @IsOptional()
  @Field(() => EnumBlockerStatus, {
    nullable: true,
  })
  status?: "Active" | "Cancelled" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Blocker };
