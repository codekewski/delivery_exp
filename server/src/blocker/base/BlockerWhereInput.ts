/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DeliveryBayListRelationFilter } from "../../deliveryBay/base/DeliveryBayListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { EnumBlockerBlockerDealershp } from "./EnumBlockerBlockerDealershp";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumBlockerStatus } from "./EnumBlockerStatus";
@InputType()
class BlockerWhereInput {
  @ApiProperty({
    required: false,
    type: () => DeliveryBayListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DeliveryBayListRelationFilter)
  @IsOptional()
  @Field(() => DeliveryBayListRelationFilter, {
    nullable: true,
  })
  blockedBay?: DeliveryBayListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumBlockerBlockerDealershp,
  })
  @IsEnum(EnumBlockerBlockerDealershp)
  @IsOptional()
  @Field(() => EnumBlockerBlockerDealershp, {
    nullable: true,
  })
  blocker_dealershp?: "complete_block" | "partial_block";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  deliveryBay?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  owner?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumBlockerStatus,
  })
  @IsEnum(EnumBlockerStatus)
  @IsOptional()
  @Field(() => EnumBlockerStatus, {
    nullable: true,
  })
  status?: "Active" | "Cancelled";
}
export { BlockerWhereInput };
