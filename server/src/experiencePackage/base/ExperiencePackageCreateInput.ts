/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumExperiencePackageActive } from "./EnumExperiencePackageActive";
import {
  IsEnum,
  IsOptional,
  ValidateNested,
  IsBoolean,
  IsJSON,
  IsString,
  IsNumber,
} from "class-validator";
import { EnumExperiencePackageChargeable } from "./EnumExperiencePackageChargeable";
import { DealershipCreateNestedManyWithoutExperiencePackagesInput } from "./DealershipCreateNestedManyWithoutExperiencePackagesInput";
import { Type } from "class-transformer";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
@InputType()
class ExperiencePackageCreateInput {
  @ApiProperty({
    required: false,
    enum: EnumExperiencePackageActive,
  })
  @IsEnum(EnumExperiencePackageActive)
  @IsOptional()
  @Field(() => EnumExperiencePackageActive, {
    nullable: true,
  })
  active?: "Active" | "Inactive" | null;

  @ApiProperty({
    required: false,
    enum: EnumExperiencePackageChargeable,
  })
  @IsEnum(EnumExperiencePackageChargeable)
  @IsOptional()
  @Field(() => EnumExperiencePackageChargeable, {
    nullable: true,
  })
  chargeable?: "Yes" | "No" | null;

  @ApiProperty({
    required: false,
    type: () => DealershipCreateNestedManyWithoutExperiencePackagesInput,
  })
  @ValidateNested()
  @Type(() => DealershipCreateNestedManyWithoutExperiencePackagesInput)
  @IsOptional()
  @Field(() => DealershipCreateNestedManyWithoutExperiencePackagesInput, {
    nullable: true,
  })
  dealership?: DealershipCreateNestedManyWithoutExperiencePackagesInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  duration?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  imageGallery?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  keyImage?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;
}
export { ExperiencePackageCreateInput };
