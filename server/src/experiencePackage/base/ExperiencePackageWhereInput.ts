/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumExperiencePackageActive } from "./EnumExperiencePackageActive";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { EnumExperiencePackageChargeable } from "./EnumExperiencePackageChargeable";
import { DealershipListRelationFilter } from "../../dealership/base/DealershipListRelationFilter";
import { Type } from "class-transformer";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
@InputType()
class ExperiencePackageWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumExperiencePackageActive,
  })
  @IsEnum(EnumExperiencePackageActive)
  @IsOptional()
  @Field(() => EnumExperiencePackageActive, {
    nullable: true,
  })
  active?: "Active" | "Inactive";

  @ApiProperty({
    required: false,
    enum: EnumExperiencePackageChargeable,
  })
  @IsEnum(EnumExperiencePackageChargeable)
  @IsOptional()
  @Field(() => EnumExperiencePackageChargeable, {
    nullable: true,
  })
  chargeable?: "Yes" | "No";

  @ApiProperty({
    required: false,
    type: () => DealershipListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DealershipListRelationFilter)
  @IsOptional()
  @Field(() => DealershipListRelationFilter, {
    nullable: true,
  })
  dealership?: DealershipListRelationFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  duration?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  imageGallery?: JsonFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  keyImage?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  price?: FloatNullableFilter;
}
export { ExperiencePackageWhereInput };
